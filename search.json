[{"content":"ssh 断开解决方案 https://www.jianshu.com/p/fa34a2b5b351\n1 2 3 4  nohup ./test 2\u003e\u00261 \u0026 # nohub，no hang up # 运行test并将错误信息重定向到标准输出（/dev/null）并挂起后台 # \u0026 让命令后台执行，终端退出后命令仍然执行   ","description":"","tags":null,"title":"cloud","uri":"/posts/cloud/"},{"content":"Basic command for linux  Write what comes to mind\n uppercase- such as C- is Ctrl\nmagic  tldr anything\n  Compare two file\n  1 2  diff a b md5sum a b   列出一个C语言项目中所有被包含过的头文件  1  find . -name \"*.[ch]\" | xargs grep \"#include\" | sort | uniq   各种工具   文件检索 - cat, more, less, head, tail, file, find 输入输出控制 - 重定向, 管道, tee, xargs 文本处理 - vim, grep, awk, sed, sort, wc, uniq, cut, tr 正则 系统监控 - jobs, ps, top, kill, free, dmesg, lsof  vim  左下上右  h j k l ← ↓ ↑ →\n 保存退出  E-:wq\nsed  sed是一个拿来随手替换文本的工具（有时候ubuntu出锅了可以强行更新一波源而玄学地解决\n 1  sed -i 's/focal/jammy/g' /etc/apt/sources.list   s/要替换的正则/替换为/g\ntmux tmux是一个终端管理工具，主要作用是保留正在运行的进程和切割终端。\n Terminal multiplexer. It allows multiple sessions with windows, panes, and more.See also zellij and screen.More information: https://github.com/tmux/tmux.\n   Start a new named session:\ntmux new -s {{name}}\n  List existing sessions:\ntmux ls\n  Attach to the most recently used session [by name]:\ntmux attach [-t {{name}}]\n  Kill a session by name:\ntmux kill-session -t {{name}}\n  Rename a session by name:\ntmux rename-session -t {{name}} {{new_name}}\n  Delete current session (inside a tmux session):\nC-d\n  Detach from the current session (inside a tmux session):\nC-b d\n  Split a new pane to right (inside a tmux session):\nC-b %\n  Split a new pane to down (inside a tmux session):\nC-b \"\n  Create a new window (inside a tmux session):\nC-b c\n  Switch between sessions and windows (inside a tmux session):\nC-b w C-b o C-b C-o\n  Zoom in or zoom out a pane (inside a tmux session):\nC-b z\n  Resize pane in direction of (inside a tmux session):\nC-b C-\u003carrow key\u003e\n  Rename the current window (inside a tmux session):\nC-b ,\n  tmux 自动保存与恢复插件 Tmux Resurrect 手动保存恢复 Tmux Continuum 定时保存恢复（依赖Tmux Resurrect）\nmkdir -p ~/.tmux cd ~/.tmux git clone git@github.com:tmux-plugins/tmux-resurrect.git git clone git@github.com:tmux-plugins/tmux-continuum.git vim ~/.tmux.conf, append to the end.\n1 2  run-shell ~/.tmux/tmux-resurrect/resurrect.tmux run-shell ~/.tmux/tmux-continuum/continuum.tmux   # 重新加载配置文件 tmux source-file ~/.tmux.conf Cmake lscpu 查看cpu数 time make 查看运行时间 make -j? ? 为cpu数，可以通过多线程加速。\n ccache 将编译没发生变化的部分加速 1 2  # append to .bashrc export PATH=\"/usr/lib/ccache:$PATH\"     只输出命令但不执行\nmake -nB\ngit git可视化练习\n精巧的小游戏\ngdb gcc main.c -Wall -Werror -o main -Wall 提示所有Warning -Werror 将Warning视为错误\ninside gdb breakpoint 114514 watch val next continue print val\nstr  strtok() stores the pointer in static variable where did you last time left off , so on its 2nd call , when we pass the null , strtok() gets the pointer from the static variable .\n 1 2  //左对齐20位并且前导10个0 printf(\"%-20.010X\",0x3f3f3f3f)   正则 元字符 . 将匹配除换行符以外的任意字符；\n转义字符 \\ 将下一字符标记为特殊字符、原义字符等，如 \\d 匹配一个数字，或把 \\. 解释为小数点而不是匹配任意字符的元字符；\n元字符 \\w 将匹配一个字母或数字或下划线或汉字，如 \\w 可以匹配 1，也可以匹配 a；\n元字符 \\s 将匹配一个空白字符，如 \\s 可以匹配 \u003cspace\u003e，也可以匹配 \u003ctab\u003e，甚至可以匹配换行符；\n元字符 \\d 将匹配一个数字，如 \\d 可以匹配 1，也可以匹配 2；\n元字符 ^ 和 $ 分别匹配字符串的开始和结束，如 ^ 匹配字符串 abc 的字符 a 之前的那个位置，$则匹配字符 c 之后的那个位置；\n限定符 * 将匹配前子表达式 0-n 次，如 \\d*abc 可以匹配 1234abc，亦可以匹配 abc；\n限定符 + 将匹配前子表达式 1-n 次，如 \\d+abc 可以匹配 1234abc，但不能匹配 abc；\n限定符 {n} 将匹配前子表达式 n 次，其中 n 为非负整数，如 \\d{5}abc 可以匹配 12345abc，但不能匹配 123abc；\n限定符 {n,m} 匹配前子表达式 n-m 次，其中 n,m 为非负整数，n\u003c=m，如 \\d{1,3}abc 可以匹配 1abc，13abc，但不能匹配 abc，然而，可以匹配 1234abc 的 234abc 部分；\n字符类的表达可以使用一对中括号 []，如 [a-c1-5] 可以匹配 a ,b, c, 1, 2, 3, 4, 5 之中的任意一个字符，如表达式 [a-c1-5]{3} 可以匹配 a1c, 23b 等等字符串；\n分枝条件 abc|123 将匹配字符串 abc 或 123；\n贪婪 a.*b\n懒惰 a.*?b匹配最短的，以a开始，以b结束的字符串。如果把它应用于aabab的话，它会匹配aab（第一到第三个字符）和ab（第四到第五个字符）。\n.\t匹配除换行符以外的任意字符\n\\w\t匹配字母或数字或下划线或汉字\n\\s\t匹配任意的空白符\n\\d\t匹配数字\n\\b\t匹配单词的开始或结束\n^\t匹配字符串的开始\n$\t匹配字符串的结束\nExample of POSIX regex in C 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57  #include \u003csys/types.h\u003e#include \u003cregex.h\u003e int regcomp(regex_t *preg, const char *regex, int cflags); Prepare your regex for fast processing int regexec(const regex_t *preg, const char *string, size_t nmatch, regmatch_t pmatch[], int eflags); Do the matching void regfree(regex_t *preg); Free your compiled regex for a new \"compiling\" size_t regerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size); Retrieve some more information on why the regexec() failed /////////////////////////////////////////// #include \u003csys/types.h\u003e#include \u003cregex.h\u003e#include \u003cstdio.h\u003e#include \u003cstdlib.h\u003e int main(int argc, char *argv[]) { regex_t regex; int reti; char msgbuf[100]; /* Compile regular expression */ reti = regcomp(\u0026regex, \"(.*)\", REG_EXTENDED); if (reti) { fprintf(stderr, \"Could not compile regex\\n\"); exit(1); } /* Execute regular expression */ regmatch_t pmatch; reti = regexec(\u0026regex, \"-(asdf)adsf\", 1, \u0026pmatch, 0); // 第三个参数如果是0，则仅判断是否匹配  printf(\"%d %d\",pmatch.rm_so,pmatch.rm_eo); if (!reti) { puts(\"Match\"); } else if (reti == REG_NOMATCH) { puts(\"No match\"); } else { regerror(reti, \u0026regex, msgbuf, sizeof(msgbuf)); fprintf(stderr, \"Regex match failed: %s\\n\", msgbuf); exit(1); } /* Free compiled regular expression if you want to use the regex_t again */ regfree(\u0026regex); return 0; }   1 2  some examples ((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)   https://learn.microsoft.com/zh-cn/dotnet/standard/base-types/regular-expression-language-quick-reference?redirectedfrom=MSDN\nhttps://deerchao.cn/tutorials/regex/regex.htm#mission\n.zshrc # alias alias apigen=\"goctl api go -api *.api -dir ../ --style=goZero\" alias proxy=\"source /bin/proxy.sh\" alias ll=\"ls -alF\" alias la=\"ls -A\" alias l=\"ls -CF\" alias say=\"echo\" . /bin/proxy.sh set # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc. # Initialization code that may require console input (password prompts, [y/n] # confirmations, etc.) must go above this block; everything else may go below. if [[ -r \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" ]]; then source \"${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh\" fi # If you come from bash you might have to change your $PATH. # export PATH=$HOME/bin:/usr/local/bin:$PATH # Path to your oh-my-zsh installation. export ZSH=\"$HOME/.oh-my-zsh\" # Set name of the theme to load --- if set to \"random\", it will # load a random theme each time oh-my-zsh is loaded, in which case, # to know which specific one was loaded, run: echo $RANDOM_THEME # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes # ZSH_THEME=\"robbyrussell\" ZSH_THEME=\"powerlevel10k/powerlevel10k\" # Set list of themes to pick from when loading at random # Setting this variable when ZSH_THEME=random will cause zsh to load # a theme from this variable instead of looking in $ZSH/themes/ # If set to an empty array, this variable will have no effect. # ZSH_THEME_RANDOM_CANDIDATES=( \"robbyrussell\" \"agnoster\" ) # Uncomment the following line to use case-sensitive completion. # CASE_SENSITIVE=\"true\" # Uncomment the following line to use hyphen-insensitive completion. # Case-sensitive completion must be off. _ and - will be interchangeable. # HYPHEN_INSENSITIVE=\"true\" # Uncomment one of the following lines to change the auto-update behavior # zstyle ':omz:update' mode disabled # disable automatic updates # zstyle ':omz:update' mode auto # update automatically without asking # zstyle ':omz:update' mode reminder # just remind me to update when it's time # Uncomment the following line to change how often to auto-update (in days). # zstyle ':omz:update' frequency 13 # Uncomment the following line if pasting URLs and other text is messed up. # DISABLE_MAGIC_FUNCTIONS=\"true\" # Uncomment the following line to disable colors in ls. # DISABLE_LS_COLORS=\"true\" # Uncomment the following line to disable auto-setting terminal title. # DISABLE_AUTO_TITLE=\"true\" # Uncomment the following line to enable command auto-correction. # ENABLE_CORRECTION=\"true\" # Uncomment the following line to display red dots whilst waiting for completion. # You can also set it to another string to have that shown instead of the default red dots. # e.g. COMPLETION_WAITING_DOTS=\"%F{yellow}waiting...%f\" # Caution: this setting can cause issues with multiline prompts in zsh \u003c 5.7.1 (see #5765) # COMPLETION_WAITING_DOTS=\"true\" # Uncomment the following line if you want to disable marking untracked files # under VCS as dirty. This makes repository status check for large repositories # much, much faster. # DISABLE_UNTRACKED_FILES_DIRTY=\"true\" # Uncomment the following line if you want to change the command execution time # stamp shown in the history command output. # You can set one of the optional three formats: # \"mm/dd/yyyy\"|\"dd.mm.yyyy\"|\"yyyy-mm-dd\" # or set a custom format using the strftime function format specifications, # see 'man strftime' for details. # HIST_STAMPS=\"mm/dd/yyyy\" # Would you like to use another custom folder than $ZSH/custom? # ZSH_CUSTOM=/path/to/new-custom-folder # Which plugins would you like to load? # Standard plugins can be found in $ZSH/plugins/ # Custom plugins may be added to $ZSH_CUSTOM/plugins/ # Example format: plugins=(rails git textmate ruby lighthouse) # Add wisely, as too many plugins slow down shell startup. plugins=( z docker git sudo zsh-autosuggestions # zsh-syntax-highlighting ) source $ZSH/oh-my-zsh.sh # User configuration # export MANPATH=\"/usr/local/man:$MANPATH\" # You may need to manually set your language environment # export LANG=en_US.UTF-8 # Preferred editor for local and remote sessions # if [[ -n $SSH_CONNECTION ]]; then # export EDITOR='vim' # else # export EDITOR='mvim' # fi # Compilation flags # export ARCHFLAGS=\"-arch x86_64\" # Set personal aliases, overriding those provided by oh-my-zsh libs, # plugins, and themes. Aliases can be placed here, though oh-my-zsh # users are encouraged to define aliases within the ZSH_CUSTOM folder. # For a full list of active aliases, run `alias`. # # Example aliases # alias zshconfig=\"mate ~/.zshrc\" # alias ohmyzsh=\"mate ~/.oh-my-zsh\" # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh. [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh #ccache export PATH=\"/usr/lib/ccache:$PATH\" export NEMU_HOME=/home/loomt/CSLearning/PA/nemu export AM_HOME=/home/loomt/CSLearning/PA/abstract-machine # go #根目录 export GOROOT=/usr/local/go #工作目录 export GOPATH=/home/loomt/go #bin目录 export GOBIN=$GOPATH/bin export PATH=$PATH:$GOPATH export PATH=$PATH:$GOBIN export PATH=$PATH:$GOROOT/bin reference\ntmux nju-PA\n","description":"","tags":null,"title":"linux","uri":"/posts/linux/"},{"content":" 摆烂，于是将目光看向了家里的小米4a千兆版路由器，准备刷个Openwrt玩一下。\n 去恩山论坛逛了逛，感觉刷软路由和刷手机差不太多。\n 安装Breed（闭源免费的BootLoader，又称“不死鸟”，有了它就能肆无忌惮地刷各种第三方包了  如果你的路由器是小米4A千兆版，可以直接用恩山论坛的无脑直装Breed；如果不是，也可以去Breed官网下载路由器的适配包并自行搜索如何通过Telnet连接路由器并刷入Breed。 用Breed安装OpenWrt  这里放一个小米4A千兆版OpenWrt直刷包，其他路由器的固件可以去恩山论坛逛逛。 .notice{--root-color:#444;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#c33;--warning-content:#fee;--info-title:#fb7;--info-content:#fec;--note-title:#6be;--note-content:#e7f2fa;--tip-title:#5a5;--tip-content:#efe}@media (prefers-color-scheme:dark){.notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}}body.dark .notice{--root-color:#ddd;--root-background:#eff;--title-color:#fff;--title-background:#7bd;--warning-title:#800;--warning-content:#400;--info-title:#a50;--info-content:#420;--note-title:#069;--note-content:#023;--tip-title:#363;--tip-content:#121}.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:var(--root-color);background:var(--root-background)}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:var(--title-color);background:var(--title-background)}.notice.warning .notice-title{background:var(--warning-title)}.notice.warning{background:var(--warning-content)}.notice.info .notice-title{background:var(--info-title)}.notice.info{background:var(--info-content)}.notice.note .notice-title{background:var(--note-title)}.notice.note{background:var(--note-content)}.notice.tip .notice-title{background:var(--tip-title)}.notice.tip{background:var(--tip-content)}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:.125em;position:relative} 警告\n刷OpenWrt之前必须用Breed备份eeprom（没有备份eeprom将导致5G信号奇差）\n 点击固件更新~\u003e常规固件~\u003e勾上“固件”和“EEPROM”，选择好上面的直刷包和备份的eeprom.bin，上传即可。\n配置OpenWrt的各项参数（随便配一下即可  OpenWrt可谓神通广大，作为一个在路由器上跑的Linux，它可以装上各种插件：酸酸乳、Docker、网易云解锁灰色歌曲……\n但我折腾了一通，调教好基础的上网功能后，感觉网络状况大不如前。作为百来块的路由器，本来就没有多大的内存，感觉原厂固件的调教已经将性能都用在刀刃上了。装了OpenWrt后虽然上下行流量速度没有很大变化，但稳定性差了很多，便懒得继续折腾，忍痛remake了。\n刷回官方包（没备份eeprom的问题 或许 也可以通过刷回官方包的方法解决  下载小米4A千兆版官方包，进入Breed~\u003e固件更新~\u003e编程器固件(仅勾选自动重启)~\u003e上传all.bin。\n","description":"","tags":null,"title":"小米4A千兆版刷OpenWrt","uri":"/posts/%E5%B0%8F%E7%B1%B34a%E5%8D%83%E5%85%86%E7%89%88%E5%88%B7openwrt/"},{"content":"7-Zip双击自动解压压缩文件  因为难以忍受7zip的右键解压操作，通过修改注册表以实现双击自动解压。\n  替换 D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\ 为 your\\\\path\\\\to\\\\7zG.exe 将代码塞进.reg文件，双击即可。indows Registry Editor Version 5.00 [HKEY_CLASSES_ROOT\\7-Zip.001\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.001\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.001\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.7z\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.7z\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.7z\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.arj\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.arj\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.arj\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.bz2\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.bz2\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.bz2\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.bzip2\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.bzip2\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.bzip2\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.cab\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.cab\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.cab\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.cpio\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.cpio\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.cpio\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.deb\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.deb\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.deb\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.dmg\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.dmg\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.dmg\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.fat\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.fat\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.fat\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.gz\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.gz\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.gz\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.gzip\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.gzip\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.gzip\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.hfs\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.hfs\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.hfs\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.iso\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.iso\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.iso\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.lha\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.lha\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.lha\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.lzh\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.lzh\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.lzh\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.lzma\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.lzma\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.lzma\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.ntfs\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.ntfs\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.ntfs\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.rar\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.rar\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.rar\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.rpm\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.rpm\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.rpm\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.squashfs\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.squashfs\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.squashfs\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.swm\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.swm\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.swm\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.tar\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.tar\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.tar\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.taz\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.taz\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.taz\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.tbz\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.tbz\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.tbz\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.tbz2\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.tbz2\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.tbz2\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.tgz\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.tgz\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.tgz\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.tpz\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.tpz\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.tpz\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.txz\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.txz\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.txz\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.vhd\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.vhd\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.vhd\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.wim\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.wim\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.wim\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.xar\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.xar\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.xar\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.xz\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.xz\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.xz\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.z\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.z\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.z\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\" [HKEY_CLASSES_ROOT\\7-Zip.zip\\shell] @=\"extract\" [HKEY_CLASSES_ROOT\\7-Zip.zip\\shell\\extract] @=\"Extract to Folder\" [HKEY_CLASSES_ROOT\\7-Zip.zip\\shell\\extract\\command] @=\"\\\"D:\\\\000000000000\\\\7-Zip\\\\7zG.exe\\\" x \\\"%1\\\" -o*\"   reference\nhttps://gist.github.com/zabbarob/5891200\n","description":"","tags":null,"title":"Auto7zip","uri":"/posts/auto7zip/"},{"content":" 前段时间白嫖了一个 域名 ，暑假有时间了赶紧物尽其用，于是花了一天的时间重新建了个站（其实我很久之前就用过hexo无脑建站，但最近发现了一个特别喜欢的Hugo主题 MemE ）。\n 简略步骤 Hugo 配置  先在 wsl 下装 Hugo  1  sudo apt install hugo   然后用 tldr 看一下 Hugo 的基础命令  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  loomt@loomt:~/blog/loomt$ tldr hugo hugo Template-based static site generator. Uses modules, components, and themes.More information: https://gohugo.io. - Create a new Hugo site: hugo new site {{path/to/site}} - Create a new Hugo theme (themes may also be downloaded from https://themes.gohugo.io/): hugo new theme {{theme_name}} - Create a new page: hugo new {{section_name}}/{{filename}} - Build a site to the ./public/ directory: hugo - Build a site including pages that are marked as a \"draft\": hugo --buildDrafts - Build a site to a given directory: hugo --destination {{path/to/destination}} - Build a site, start up a webserver to serve it, and automatically reload when pages are edited: hugo server   新建站点并配置主题  1 2 3 4 5  hugo new site loomt # 随便起一个名字 cd loomt git init git submodule add https://github.com/reuixiy/hugo-theme-meme.git themes/meme # 将皮肤作为submodule添加，以便更新 rm config.toml \u0026\u0026 cp themes/meme/config-examples/en/config.toml config.toml #覆盖配置文件   发布文章  1  hugo new posts/first_post.md #可以在此路径下编辑文章   运行本地服务  1  hugo server -D # 在本地服务器运行 -D是渲染草稿   现在已经完成基本配置，可以访问运行在本机的站点了。还可以根据 Hugo 官方以及使用的皮肤作者提供的文档进行个性化的配置。\n 配置的时候有一个需要注意的地方是 config.toml 的 baseURL 要加 https:// ，否则生成的静态页面 css 和 js 加载会出问题。\n 部署到 Github Page Hugo 是一个网站构建工具，生成的 public 文件夹存放的是静态的部署页面，我们需要将其放在 Github Page 中。建议开两个仓库，一个仓库用于存放根目录，另一个用于存放./public 文件夹的内容，以便被 Github Page 部署。\n 因为根目录可能有敏感信息或者暂时不希望公开的草稿，为了让其得到有效的版本控制，建议开一个私有仓库存放\n而 publishDir(./pubic) 作为输出的静态页面，则适合放在公开的仓库 Github Page 不公开没法白嫖\n 默认看到这里的同学已经建好了仓库，并完成了仓库的初始化和配置🤗。 下面假设更新了文章，需要同步到两个仓库。\n1 2 3 4 5 6 7 8  hugo --gc --cleanDestinationDir # 生成静态站点到./public的同时 清除缓存和静态站点用不着的文件 git add . git commit -m \"update source code\" git push cd public git add . git commit -m \"update Github Page\" git push   还可以加个 Github Workflow，简化步骤，具体可阅读 GitHub Actions 官方文档，actions-gh-pages 以及 reuixiy 的博客 。\n自动化方案  如果源码仓库和 Github Page 仓库都是公有的话可以阅读 actions-gh-pages 进行简单的配置。 如果源码仓库是私有的，Github Page 仓库是公开的话，可以参考以下配置方案。   配置公钥和私钥到仓库  需要生成 SSH key pair 以获取源码仓库对 Github Page 仓库修改的权限。\nssh-keygen -t rsa -b 4096 -C \"yourname@users.noreply.github.com\" # 注意：不要无脑回车，最好开一个文件夹存公钥私钥，不然会覆盖掉以前的  id_rsa（私钥）  前往Github Page仓库，Settings \u003e Deploy Keys \u003e Add deploy key。\n需要勾选 Allow write access。\n id_rsa.pub （公钥）  前往源码仓库，Settings \u003e Secrets \u003e Actions \u003e New repository secret。\nName 需要设为 ACTIONS_DEPLOY_KEY\n新建 Workflow 配置文件  下面粘一下我的配置方案\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  # .github/workflows/build.ymlname:Hugo automated deploymenton:push:branches:- main # Set a branch name to trigger deploymentjobs:deploy:runs-on:ubuntu-latestpermissions:contents:writeconcurrency:group:${{ github.workflow }}-${{ github.ref }}steps:- uses:actions/checkout@v3with:submodules:true# Fetch Hugo themes (true OR recursive)fetch-depth:0# Fetch all history for .GitInfo and .Lastmod- name:Setup Hugouses:peaceiris/actions-hugo@v2with:hugo-version:'0.92.2'extended:true- name:Buildrun:hugo --gc --minify# - name: Deploy# uses: peaceiris/actions-gh-pages@v3# # If you're changing the branch from main, # # also change the `main` in `refs/heads/main` # # below accordingly.# if: ${{ github.ref == 'refs/heads/main' }}# with:# github_token: ${{ secrets.GITHUB_TOKEN }}# publish_dir: ./public- name:Deploy # 此处需要按照自己实际修改uses:peaceiris/actions-gh-pages@v3with:deploy_key:${{ secrets.ACTIONS_DEPLOY_KEY }}external_repository:loomts/loomts.github.io publish_branch: main # default:gh-pagespublish_dir:./public  推送到 Github  1 2 3  git add . git commit -m \"setup auto deploy\" git push   打开你的源码仓库页面，点击 Actions 查看日志。\nGithub Page 绑定自定义域名 假设已经有了域名，现在需要在域名的 DNS 服务商那里加一个 CNAME （用于 dns 跳转）\n   name type value     www CNAME loomts.github.io    一段时间后，回到 Github Page 仓库，在 Settings \u003e Pages \u003e Custom domain 处填上自己的域名，等待几小时生成证书，然后勾选 Enforce HTTPS。\n还要记得添加 your domain 到 static/CNAME ，以生成到静态文件。\n Custom domains are stored in a CNAME file in the root of your publishing source. You can add or update this file through your repository settings or manually. For more information, see \" Managing a custom domain for your GitHub Pages site .\" ——Github Docs\n Vercel Vercel 可以看作是一个结合了 Github Page 还有 Github Actions 的用于前端框架和静态站点管的平台，直接导入仓库即可部署，也可以和 Github Page 结合使用。需要注意的是注册域名的时候要去域名注册商改一下 DNS 服器。\n总结 目前我在用 Vercel 托管 https://loomt.top ，顺便将 Github Page 绑定了这个白嫖的域名，博客的更新只需要push源代码vercel就会自动编译部署，感觉非常不戳。\n个人感觉 Vercel 的体验要比 Github Page 略好一点，但是需要有一个自己的域名。\nreference\nhttps://gohugo.io/getting-started/\nhttps://blog.aozaki.cc/blog/hugo-deployment-debugging\nhttps://io-oi.me/tech/hugo-vs-hexo/\nhttps://github.com/MunifTanjim/minimo/issues/189\nhttps://zenlian.github.io/posts/tools/github-actions-hugo/\nhttps://github.com/peaceiris/actions-gh-pages\n","description":"","tags":["Github Page","建站"],"title":"建站","uri":"/posts/%E5%BB%BA%E7%AB%99/"}]