<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>loomt</title><link>/</link><description>MemE is a powerful and highly customizable GoHugo theme for personal blogs.</description><generator>Hugo 0.101.0 https://gohugo.io/</generator><language>en</language><managingEditor>loomt_@outlook.com (loomt)</managingEditor><webMaster>loomt_@outlook.com (loomt)</webMaster><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><lastBuildDate>Sun, 17 Jul 2022 13:20:56 +0800</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="/rss.xml"/><item><title>建站</title><link>/posts/%E5%BB%BA%E7%AB%99/</link><guid isPermaLink="true">/posts/%E5%BB%BA%E7%AB%99/</guid><pubDate>Fri, 15 Jul 2022 12:01:10 +0800</pubDate><author>loomt_@outlook.com (loomt)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><description>&lt;p>&lt;img src="/img/sky.jpg" alt="sky">&lt;/p>
&lt;blockquote>
&lt;p>前段时间白嫖了一个 &lt;a href="https://loomt.eu.org">域名&lt;/a> ，暑假有时间了赶紧物尽其用，于是花了一天的时间重新建了个站（其实我很久之前就用过hexo无脑建站，但最近发现了一个特别喜欢的&lt;a href="https://gohugo.io/">Hugo&lt;/a>主题 &lt;a href="https://github.com/reuixiy/hugo-theme-meme">MemE&lt;/a> ）。&lt;/p>
&lt;/blockquote>
&lt;h1 id="简略步骤">简略步骤&lt;/h1>
&lt;h2 id="hugo-配置">Hugo 配置&lt;/h2>
&lt;ol>
&lt;li>先在 wsl 下装 Hugo&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>然后用 tldr 看一下 Hugo 的基础命令&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">loomt@loomt:~/blog/loomt$ tldr hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Template-based static site generator. Uses modules, components, and themes.More information: https://gohugo.io.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Create a new Hugo site:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo new site &lt;span class="o">{{&lt;/span>path/to/site&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Create a new Hugo theme &lt;span class="o">(&lt;/span>themes may also be downloaded from https://themes.gohugo.io/&lt;span class="o">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo new theme &lt;span class="o">{{&lt;/span>theme_name&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Create a new page:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo new &lt;span class="o">{{&lt;/span>section_name&lt;span class="o">}}&lt;/span>/&lt;span class="o">{{&lt;/span>filename&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Build a site to the ./public/ directory:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Build a site including pages that are marked as a &lt;span class="s2">&amp;#34;draft&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo --buildDrafts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Build a site to a given directory:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo --destination &lt;span class="o">{{&lt;/span>path/to/destination&lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - Build a site, start up a webserver to serve it, and automatically reload when pages are edited:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>新建站点并配置主题&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new site loomt &lt;span class="c1"># 随便起一个名字&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> loomt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule add https://github.com/reuixiy/hugo-theme-meme.git themes/meme &lt;span class="c1"># 将皮肤作为submodule添加，以便更新&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm config.toml &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cp themes/meme/config-examples/en/config.toml config.toml &lt;span class="c1">#覆盖配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>发布文章&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new posts/first_post.md &lt;span class="c1">#可以在此路径下编辑文章&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>运行本地服务&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server -D &lt;span class="c1"># 在本地服务器运行 -D是渲染草稿&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在已经完成基本配置，可以访问运行在本机的站点了。还可以根据 Hugo 官方以及使用的皮肤作者提供的文档进行个性化的配置。&lt;/p>
&lt;blockquote>
&lt;p>配置的时候有一个需要注意的地方是 config.toml 的 baseURL 要加 &lt;code>https://&lt;/code> ，否则生成的静态页面 css 和 js 加载会出问题。&lt;/p>
&lt;/blockquote>
&lt;h2 id="部署到-github-page">部署到 Github Page&lt;/h2>
&lt;p>Hugo 是一个网站构建工具，生成的 public 文件夹存放的是静态的部署页面，我们需要将其放在 Github Page 中。建议开两个仓库，一个仓库用于存放根目录，另一个用于存放./public 文件夹的内容，以便被 Github Page 部署。&lt;/p>
&lt;blockquote>
&lt;p>因为根目录可能有敏感信息或者暂时不希望公开的草稿，为了让其得到有效的版本控制，建议开一个私有仓库存放&lt;/p>
&lt;p>而 publishDir(./pubic) 作为输出的静态页面，则适合放在公开的仓库 &lt;del>Github Page 不公开没法白嫖&lt;/del>&lt;/p>
&lt;/blockquote>
&lt;p>默认看到这里的同学已经建好了仓库，并完成了仓库的初始化和配置🤗。
下面假设更新了文章，需要同步到两个仓库。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo --gc --cleanDestinationDir &lt;span class="c1"># 生成静态站点到./public的同时 清除缓存和静态站点用不着的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;update&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> public
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;update&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还可以加个 Github Workflow，简化步骤，具体可阅读 &lt;a href="https://docs.github.com/cn/actions/learn-github-actions/understanding-github-actions">GitHub Actions 官方文档&lt;/a> 和 &lt;a href="https://io-oi.me/tech/deploy-hugo-to-github-pages-via-github-actions/">reuixiy 的博客&lt;/a> ，下面粘一下我的配置方案，将其复制在根目录下的 .github/workflows/xxx.yml 里面即可在push后由github服务器自动执行定义好的工作流。&lt;/p>
&lt;pre tabindex="0">&lt;code>name: auto deploy
on:
  push:
    branches:
      - main # Set a branch to deploy
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: &amp;#34;0.92.2&amp;#34;
          # extended: true
      - name: Build
        run: hugo --gc --minify --cleanDestinationDir
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
&lt;/code>&lt;/pre>&lt;h2 id="github-page-绑定自定义域名">Github Page 绑定自定义域名&lt;/h2>
&lt;p>Github Page 绑定域名
在域名的 DNS 服务商那里加一个 CNAME&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>name&lt;/th>
&lt;th>type&lt;/th>
&lt;th>value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>www&lt;/td>
&lt;td>CNAME&lt;/td>
&lt;td>loomts.github.io&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>一段时间后，回到 Github Page 仓库，在 &lt;code>Custom domain&lt;/code> 处填上自己的域名，等待几小时生成证书，然后勾选 &lt;code>Enforce HTTPS&lt;/code>。&lt;/p>
&lt;p>还要记得添加 &lt;code>loomt.eu.org&lt;/code> 到 static/CNAME&lt;/p>
&lt;blockquote>
&lt;p>Custom domains are stored in a &lt;em>CNAME&lt;/em> file in the root of your publishing source. You can add or update this file through your repository settings or manually. For more information, see &amp;quot; &lt;a href="https://docs.github.com/en/articles/managing-a-custom-domain-for-your-github-pages-site">Managing a custom domain for your GitHub Pages site&lt;/a> .&amp;quot; ——Github Docs&lt;/p>
&lt;/blockquote>
&lt;h2 id="vercel">Vercel&lt;/h2>
&lt;p>&lt;a href="https://vercel.com/">Vercel&lt;/a> 可以看作是一个结合了 Github Page 还有 Github Actions 的用于前端框架和静态站点管理的平台，直接导入仓库即可部署，也可以和Github Page结合使用，非常简单。需要注意的是注册域名的时候要去域名注册商改一下DNS服务器。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>目前我在用 Vercel 托管 &lt;a href="https://loomt.eu.org">https://loomt.eu.org&lt;/a> ，顺便将 Github Page 绑定了这个白嫖的域名，感觉非常不戳。
个人感觉 Vercel 的体验是要比 Github Page 略好一点，但是需要有一个自己的域名。&lt;/p>
&lt;p>reference:&lt;/p>
&lt;p>&lt;a href="https://gohugo.io/getting-started/">https://gohugo.io/getting-started/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.aozaki.cc/blog/hugo-deployment-debugging">https://blog.aozaki.cc/blog/hugo-deployment-debugging&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://io-oi.me/tech/hugo-vs-hexo/">https://io-oi.me/tech/hugo-vs-hexo/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/MunifTanjim/minimo/issues/189">https://github.com/MunifTanjim/minimo/issues/189&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://zenlian.github.io/posts/tools/github-actions-hugo/">https://zenlian.github.io/posts/tools/github-actions-hugo/&lt;/a>&lt;/p></description></item></channel></rss>