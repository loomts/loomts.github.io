<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><title type="text">loomt</title><subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle><updated>2022-07-17T07:00:09+00:00</updated><id>loomt.eu.org/</id><link rel="alternate" type="text/html" href="loomt.eu.org/"/><link rel="self" type="application/atom+xml" href="loomt.eu.org/atom.xml"/><author><name>loomt</name><uri>/</uri><email>loomt_@outlook.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><generator uri="https://gohugo.io/" version="0.92.2">Hugo</generator><entry><title type="text">建站</title><link rel="alternate" type="text/html" href="loomt.eu.org/posts/%E5%BB%BA%E7%AB%99/"/><id>loomt.eu.org/posts/%E5%BB%BA%E7%AB%99/</id><updated>2022-07-17T07:00:07+00:00</updated><published>2022-07-15T12:01:10+08:00</published><author><name>loomt</name><uri>https://loomt.eu.org</uri><email>loomt_@outlook.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">前段时间白嫖了一个 域名 ，暑假有时间了赶紧物尽其用，于是花了一天的时间重新建了个站（其实我很久之前就用过hexo无脑建站，但最近发现了一个特别喜欢的Hugo主题 MemE ）。
简略步骤 Hugo 配置 先在 wsl 下装 Hugo 1 sudo apt install hugo 然后用 tldr 看一下 Hugo 的基础命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 loomt@loomt:~/blog/loomt$ tldr hugo hugo Template-based static site generator.</summary><content type="html">&lt;p>&lt;img src="loomt.eu.org/img/sky.jpg" alt="sky">&lt;/p>
&lt;blockquote>
&lt;p>前段时间白嫖了一个 &lt;a href="https://loomt.eu.org">域名&lt;/a> ，暑假有时间了赶紧物尽其用，于是花了一天的时间重新建了个站（其实我很久之前就用过hexo无脑建站，但最近发现了一个特别喜欢的&lt;a href="https://gohugo.io/">Hugo&lt;/a>主题 &lt;a href="https://github.com/reuixiy/hugo-theme-meme">MemE&lt;/a> ）。&lt;/p>
&lt;/blockquote>
&lt;h1 id="简略步骤">简略步骤&lt;/h1>
&lt;h2 id="hugo-配置">Hugo 配置&lt;/h2>
&lt;ol>
&lt;li>先在 wsl 下装 Hugo&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt install hugo
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>然后用 tldr 看一下 Hugo 的基础命令&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">loomt@loomt:~/blog/loomt$ tldr hugo
hugo
Template-based static site generator. Uses modules, components, and themes.More information: https://gohugo.io.
- Create a new Hugo site:
hugo new site &lt;span class="o">{{&lt;/span>path/to/site&lt;span class="o">}}&lt;/span>
- Create a new Hugo theme &lt;span class="o">(&lt;/span>themes may also be downloaded from https://themes.gohugo.io/&lt;span class="o">)&lt;/span>:
hugo new theme &lt;span class="o">{{&lt;/span>theme_name&lt;span class="o">}}&lt;/span>
- Create a new page:
hugo new &lt;span class="o">{{&lt;/span>section_name&lt;span class="o">}}&lt;/span>/&lt;span class="o">{{&lt;/span>filename&lt;span class="o">}}&lt;/span>
- Build a site to the ./public/ directory:
hugo
- Build a site including pages that are marked as a &lt;span class="s2">&amp;#34;draft&amp;#34;&lt;/span>:
hugo --buildDrafts
- Build a site to a given directory:
hugo --destination &lt;span class="o">{{&lt;/span>path/to/destination&lt;span class="o">}}&lt;/span>
- Build a site, start up a webserver to serve it, and automatically reload when pages are edited:
hugo server
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>新建站点并配置主题&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">hugo new site loomt &lt;span class="c1"># 随便起一个名字&lt;/span>
&lt;span class="nb">cd&lt;/span> loomt
git init
git submodule add https://github.com/reuixiy/hugo-theme-meme.git themes/meme &lt;span class="c1"># 将皮肤作为submodule添加，以便更新&lt;/span>
rm config.toml &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> cp themes/meme/config-examples/en/config.toml config.toml &lt;span class="c1">#覆盖配置文件&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>发布文章&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">hugo new posts/first_post.md &lt;span class="c1">#可以在此路径下编辑文章&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>运行本地服务&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">hugo server -D &lt;span class="c1"># 在本地服务器运行 -D是渲染草稿&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>现在已经完成基本配置，可以访问运行在本机的站点了。还可以根据 Hugo 官方以及使用的皮肤作者提供的文档进行个性化的配置。&lt;/p>
&lt;blockquote>
&lt;p>配置的时候有一个需要注意的地方是 config.toml 的 baseURL 要加 &lt;code>https://&lt;/code> ，否则生成的静态页面 css 和 js 加载会出问题。&lt;/p>
&lt;/blockquote>
&lt;h2 id="部署到-github-page">部署到 Github Page&lt;/h2>
&lt;p>Hugo 是一个网站构建工具，生成的 public 文件夹存放的是静态的部署页面，我们需要将其放在 Github Page 中。建议开两个仓库，一个仓库用于存放根目录，另一个用于存放./public 文件夹的内容，以便被 Github Page 部署。&lt;/p>
&lt;blockquote>
&lt;p>因为根目录可能有敏感信息或者暂时不希望公开的草稿，为了让其得到有效的版本控制，建议开一个私有仓库存放&lt;/p>
&lt;p>而 publishDir(./pubic) 作为输出的静态页面，则适合放在公开的仓库 &lt;del>Github Page 不公开没法白嫖&lt;/del>&lt;/p>
&lt;/blockquote>
&lt;p>默认看到这里的同学已经建好了仓库，并完成了仓库的初始化和配置🤗。
下面假设更新了文章，需要同步到两个仓库。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">hugo --gc --cleanDestinationDir &lt;span class="c1"># 生成静态站点到./public的同时 清除缓存和静态站点用不着的文件&lt;/span>
git add .
git commit -m &lt;span class="s2">&amp;#34;update source code&amp;#34;&lt;/span>
git push
&lt;span class="nb">cd&lt;/span> public
git add .
git commit -m &lt;span class="s2">&amp;#34;update Github Page&amp;#34;&lt;/span>
git push
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还可以加个 Github Workflow，简化步骤，具体可阅读 &lt;a href="https://docs.github.com/cn/actions/learn-github-actions/understanding-github-actions">GitHub Actions 官方文档&lt;/a>，&lt;a href="https://github.com/peaceiris/actions-gh-pages">actions-gh-pages&lt;/a> 以及 &lt;a href="https://io-oi.me/tech/deploy-hugo-to-github-pages-via-github-actions/">reuixiy 的博客&lt;/a> 。&lt;/p>
&lt;h3 id="自动化方案">自动化方案&lt;/h3>
&lt;ul>
&lt;li>如果源码仓库和 Github Page 仓库都是公有的话可以阅读 &lt;a href="https://github.com/peaceiris/actions-gh-pages">actions-gh-pages&lt;/a> 进行简单的配置。&lt;/li>
&lt;li>如果源码仓库是私有的，Github Page 仓库是公开的话，可以参考以下配置方案。&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>配置公钥和私钥到仓库&lt;/li>
&lt;/ol>
&lt;p>需要生成 SSH key pair 以获取源码仓库对 Github Page 仓库修改的权限。&lt;/p>
&lt;pre tabindex="0">&lt;code>ssh-keygen -t rsa -b 4096 -C &amp;quot;yourname@users.noreply.github.com&amp;quot;
# 注意：不要无脑回车，最好开一个文件夹存公钥私钥，不然会覆盖掉以前的
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>id_rsa（私钥）&lt;/li>
&lt;/ul>
&lt;p>前往Github Page仓库，Settings &amp;gt; Deploy Keys &amp;gt; Add deploy key。&lt;/p>
&lt;p>需要勾选 Allow write access。&lt;/p>
&lt;ul>
&lt;li>id_rsa.pub （公钥）&lt;/li>
&lt;/ul>
&lt;p>前往源码仓库，Settings &amp;gt; Secrets &amp;gt; Actions &amp;gt; New repository secret。&lt;/p>
&lt;p>Name 需要设为 ACTIONS_DEPLOY_KEY&lt;/p>
&lt;ol start="2">
&lt;li>新建 Workflow 配置文件&lt;/li>
&lt;/ol>
&lt;p>下面粘一下我的配置方案&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="c"># .github/workflows/build.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Hugo automated deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">main &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Set a branch name to trigger deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">permissions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">contents&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">write&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">concurrency&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">group&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.workflow }}-${{ github.ref }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.92.2&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># - name: Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># uses: peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># # If you&amp;#39;re changing the branch from main, &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># # also change the `main` in `refs/heads/main` &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># # below accordingly.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># if: ${{ github.ref == &amp;#39;refs/heads/main&amp;#39; }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># with:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># github_token: ${{ secrets.GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># publish_dir: ./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy_key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">loomts/loomts.github.io&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># your Github Page repository&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch: main # default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gh-pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>推送到 Github&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">git add .
git commit -m &lt;span class="s2">&amp;#34;setup auto deploy&amp;#34;&lt;/span>
git push
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>打开你的源码仓库页面，点击 Actions 查看日志。&lt;/p>
&lt;h2 id="github-page-绑定自定义域名">Github Page 绑定自定义域名&lt;/h2>
&lt;p>假设已经有了域名，现在需要在域名的 DNS 服务商那里加一个 CNAME （用于 dns 跳转）&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>name&lt;/th>
&lt;th>type&lt;/th>
&lt;th>value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>www&lt;/td>
&lt;td>CNAME&lt;/td>
&lt;td>loomts.github.io&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>一段时间后，回到 Github Page 仓库，在 Settings &amp;gt; Pages &amp;gt; Custom domain 处填上自己的域名，等待几小时生成证书，然后勾选 &lt;code>Enforce HTTPS&lt;/code>。&lt;/p>
&lt;p>还要记得添加 &lt;code>your domain&lt;/code> 到 static/CNAME ，以生成到静态文件。&lt;/p>
&lt;blockquote>
&lt;p>Custom domains are stored in a &lt;em>CNAME&lt;/em> file in the root of your publishing source. You can add or update this file through your repository settings or manually. For more information, see &amp;quot; &lt;a href="https://docs.github.com/en/articles/managing-a-custom-domain-for-your-github-pages-site">Managing a custom domain for your GitHub Pages site&lt;/a> .&amp;quot; ——Github Docs&lt;/p>
&lt;/blockquote>
&lt;h2 id="vercel">Vercel&lt;/h2>
&lt;p>&lt;a href="https://vercel.com/">Vercel&lt;/a> 可以看作是一个结合了 Github Page 还有 Github Actions 的用于前端框架和静态站点管理的平台，直接导入仓库即可部署，也可以和 Github Page 结合使用。需要注意的是注册域名的时候要去域名注册商改一下 DNS 服务器。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>目前我在用 Vercel 托管 &lt;a href="https://loomt.eu.org">https://loomt.eu.org&lt;/a> ，顺便将 Github Page 绑定了这个白嫖的域名，感觉非常不戳。
个人感觉 Vercel 的体验要比 Github Page 略好一点，但是需要有一个自己的域名。&lt;/p>
&lt;p>&lt;em>reference&lt;/em>&lt;/p>
&lt;p>&lt;a href="https://gohugo.io/getting-started/">https://gohugo.io/getting-started/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.aozaki.cc/blog/hugo-deployment-debugging">https://blog.aozaki.cc/blog/hugo-deployment-debugging&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://io-oi.me/tech/hugo-vs-hexo/">https://io-oi.me/tech/hugo-vs-hexo/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/MunifTanjim/minimo/issues/189">https://github.com/MunifTanjim/minimo/issues/189&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://zenlian.github.io/posts/tools/github-actions-hugo/">https://zenlian.github.io/posts/tools/github-actions-hugo/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/peaceiris/actions-gh-pages">https://github.com/peaceiris/actions-gh-pages&lt;/a>&lt;/p></content></entry></feed>